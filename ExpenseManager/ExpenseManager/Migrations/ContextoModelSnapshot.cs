// <auto-generated />
using ExpenseManager.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExpenseManager.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ExpenseManager.Models.Expense", b =>
                {
                    b.Property<int>("ExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("MonthId")
                        .HasColumnType("int");

                    b.Property<int>("TypeExpenseId")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("ExpenseId");

                    b.HasIndex("MonthId");

                    b.HasIndex("TypeExpenseId");

                    b.ToTable("Expense");
                });

            modelBuilder.Entity("ExpenseManager.Models.Months", b =>
                {
                    b.Property<int>("MonthId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MonthId");

                    b.ToTable("Months");
                });

            modelBuilder.Entity("ExpenseManager.Models.Salary", b =>
                {
                    b.Property<int>("SalaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("MonthId")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("SalaryId");

                    b.HasIndex("MonthId")
                        .IsUnique();

                    b.ToTable("Salary");
                });

            modelBuilder.Entity("ExpenseManager.Models.TypeExpense", b =>
                {
                    b.Property<int>("TypeExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TypeExpenseId");

                    b.ToTable("TypeExpense");
                });

            modelBuilder.Entity("ExpenseManager.Models.Expense", b =>
                {
                    b.HasOne("ExpenseManager.Models.Months", "Months")
                        .WithMany("Expenses")
                        .HasForeignKey("MonthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExpenseManager.Models.TypeExpense", "TypeExpense")
                        .WithMany("Expenses")
                        .HasForeignKey("TypeExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Months");

                    b.Navigation("TypeExpense");
                });

            modelBuilder.Entity("ExpenseManager.Models.Salary", b =>
                {
                    b.HasOne("ExpenseManager.Models.Months", "Months")
                        .WithOne("Salary")
                        .HasForeignKey("ExpenseManager.Models.Salary", "MonthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Months");
                });

            modelBuilder.Entity("ExpenseManager.Models.Months", b =>
                {
                    b.Navigation("Expenses");

                    b.Navigation("Salary");
                });

            modelBuilder.Entity("ExpenseManager.Models.TypeExpense", b =>
                {
                    b.Navigation("Expenses");
                });
#pragma warning restore 612, 618
        }
    }
}
